// <auto-generated />
using DeveloperTickets.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DeveloperTickets.DAL.Migrations
{
    [DbContext(typeof(DevelopmentContext))]
    [Migration("20230408130033_InitCreate")]
    partial class InitCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DeveloperTickets.DAL.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dept 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dept 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dept 3"
                        });
                });

            modelBuilder.Entity("DeveloperTickets.DAL.Developer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Developers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dev 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dev 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dev 3"
                        });
                });

            modelBuilder.Entity("DeveloperTickets.DAL.DeveloperTicket", b =>
                {
                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<int>("DeveloperId")
                        .HasColumnType("int");

                    b.HasKey("TicketId", "DeveloperId");

                    b.HasIndex("DeveloperId");

                    b.ToTable("DeveloperTickets");

                    b.HasData(
                        new
                        {
                            TicketId = 1,
                            DeveloperId = 1
                        },
                        new
                        {
                            TicketId = 1,
                            DeveloperId = 3
                        },
                        new
                        {
                            TicketId = 2,
                            DeveloperId = 2
                        },
                        new
                        {
                            TicketId = 2,
                            DeveloperId = 1
                        },
                        new
                        {
                            TicketId = 3,
                            DeveloperId = 1
                        },
                        new
                        {
                            TicketId = 3,
                            DeveloperId = 2
                        },
                        new
                        {
                            TicketId = 3,
                            DeveloperId = 3
                        });
                });

            modelBuilder.Entity("DeveloperTickets.DAL.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            Description = "Ticket 1 of some bug",
                            Title = "Ticket 1"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            Description = "Ticket 2 of some bug",
                            Title = "Ticket 2"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 3,
                            Description = "Ticket 3 of some bug",
                            Title = "Ticket 3"
                        });
                });

            modelBuilder.Entity("DeveloperTickets.DAL.DeveloperTicket", b =>
                {
                    b.HasOne("DeveloperTickets.DAL.Developer", "Developer")
                        .WithMany("DeveloperTickets")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DeveloperTickets.DAL.Ticket", "Ticket")
                        .WithMany("DeveloperTickets")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Developer");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("DeveloperTickets.DAL.Ticket", b =>
                {
                    b.HasOne("DeveloperTickets.DAL.Department", "Department")
                        .WithMany("Tickets")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("DeveloperTickets.DAL.Department", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("DeveloperTickets.DAL.Developer", b =>
                {
                    b.Navigation("DeveloperTickets");
                });

            modelBuilder.Entity("DeveloperTickets.DAL.Ticket", b =>
                {
                    b.Navigation("DeveloperTickets");
                });
#pragma warning restore 612, 618
        }
    }
}
